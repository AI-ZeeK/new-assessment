// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  //   provider = "postgresql"
  provider = "mongodb"

  url = env("DATABASE_URL")
}

model User {
  //   id             String          @id @default(uuid())
  id             String          @id @default(auto()) @map("_id") @db.ObjectId
  username       String?
  name           String?
  email          String          @unique
  password       String?
  bio            String?
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  profilePhoto   String?
  posts          Post[]
  friendRequests FriendRequest[] @relation()
  friends        String[]        @unique
  comments       Comments[]
}

model FriendRequest {
  //   id       String  @id @default(uuid())
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  sender   Boolean @default(false)
  friendId String
  userId   String
  user     User    @relation(fields: [userId], references: [id])
}

model Post {
  //   id String @id @default(uuid())
  id String @id @default(auto()) @map("_id") @db.ObjectId

  image      String?
  content    String
  author     User?      @relation(fields: [authorId], references: [id])
  authorId   String?
  comments   Comments[]
  postlikes  String[]
  authorLike Boolean    @default(false)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model Comments {
  //   id String @id @default(uuid())
  id String @id @default(auto()) @map("_id") @db.ObjectId

  comment     String
  commentor   User?   @relation(fields: [commentorId], references: [id])
  commentorId String?
  Post        Post?   @relation(fields: [postId], references: [id])
  postId      String?
}

enum RequestState {
  ACCEPTED
  PENDING
  REJECTED
}
